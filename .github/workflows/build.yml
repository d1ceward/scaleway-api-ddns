name: Build
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Build for ${{ matrix.binarySuffix }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - binarySuffix: linux-amd64
            arch: x86_64
            distro: alpine_latest
          - binarySuffix: linux-arm64
            arch: aarch64
            distro: alpine_latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: repository
      - name: Build binary
        uses: d1ceward/run-on-arch-action@master
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          dockerRunArgs: --volume "${PWD}/repository:/repository"
          run: |
            apk update
            apk add make g++ openssl-dev openssl-libs-static yaml-static zlib-static curl crystal shards

            export CRYSTAL_DIR=/tmp/crystal
            export CRYSTAL_VERSION=$(cat /repository/.crystal-version)

            mkdir -p $CRYSTAL_DIR
            cd $CRYSTAL_DIR

            curl -s -L --retry 15 --retry-delay 2 "https://github.com/crystal-lang/crystal/archive/${CRYSTAL_VERSION}.tar.gz" | tar xz -C $CRYSTAL_DIR --strip-component=1

            export LLVM_VERSION=$(cat src/llvm/ext/llvm-versions.txt | awk '{print $1;}' | grep -o -E '[0-9]+' | head -1)
            apk add "llvm${LLVM_VERSION}-dev" "llvm${LLVM_VERSION}-static"

            make

            cd /repository
            shards install --production -v
            /tmp/crystal/bin/crystal build --static --no-debug --verbose --release -o ./scaleway-ddns src/scaleway_ddns.cr

            mv scaleway-ddns scaleway-ddns-linux-${{ matrix.binarySuffix }}
      - name: Upload binaries to action artifacts
        uses: actions/upload-artifact@v3
        with:
          name: scaleway-ddns-linux-${{ matrix.binarySuffix }}
          path: ./repository/scaleway-ddns-linux-${{ matrix.binarySuffix }}
  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Create draft release with binaries
        uses: d1ceward/draft-assets-release-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ./scaleway-ddns-linux-amd64/scaleway-ddns-linux-amd64
            ./scaleway-ddns-linux-arm64/scaleway-ddns-linux-arm64
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          logout: true
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: d1ceward/scaleway-ddns
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
