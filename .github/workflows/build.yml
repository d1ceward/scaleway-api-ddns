name: Build
on:
  push:
    # tags:
    #   - 'v*'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  #     - name: Set crystal version environement variable
  #       run: echo "CRYSTAL_VERSION=$(cat .crystal-version)" >> $GITHUB_ENV
  #     - name: Install Crystal
  #       uses: crystal-lang/install-crystal@v1
  #       with:
  #         crystal: ${{ env.CRYSTAL_VERSION }}
  #     - name: Crystal shard cache
  #       uses: actions/cache@v3
  #       with:
  #         path: lib
  #         key: ${{ runner.os }}-shards-${{ hashFiles('**/shard.lock') }}
  #     - name: Install dependencies & prepare binaries folder
  #       run: |
  #         shards install --production -v
  #         mkdir ./release-binaries
  #     - name: Build linux amd64 binary
  #       run: crystal build --static --no-debug --verbose --release -o ./release-binaries/scaleway-ddns-linux-amd64 src/scaleway_ddns.cr
  #     - name: Build linux arm64 binary object
  #       run: crystal build --cross-compile --target=aarch64-unknown-linux-gnu --static --no-debug --verbose --release -o ./release-binaries/scaleway-ddns-linux-arm64 src/scaleway_ddns.cr
  #     - name: Build linux arm64 binary
  #       uses: uraimo/run-on-arch-action@v2
  #       with:
  #         arch: aarch64
  #         distro: ubuntu_latest
  #         setup: mkdir -p "${PWD}/release-binaries"
  #         dockerRunArgs: --volume "${PWD}/release-binaries:/release-binaries"
  #         install: |
  #           apt-get update
  #           apt-get --yes install build-essential libssl-dev libxml2-dev libyaml-dev libgmp-dev libz-dev libevent-dev libgc-dev libpcre3-dev curl sudo

  #           CRYSTAL_VERSION=${{ env.CRYSTAL_VERSION }}
  #           curl -fsSL https://crystal-lang.org/install.sh | sudo bash -s -- --version=${CRYSTAL_VERSION:0:3}
  #         run: |
  #           cc /release-binaries/scaleway-ddns-linux-arm64.o -o /release-binaries/scaleway-ddns-linux-arm64  -rdynamic -static -L/usr/lib/crystal -lz `command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libssl || printf %s '-lssl -lcrypto'` `command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libcrypto || printf %s '-lcrypto'` -lpcre -lm -lgc -lpthread -levent -lrt -lpthread -ldl
  #           rm /release-binaries/scaleway-ddns-linux-arm64.o
  #     - name: Upload binaries to action artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: release-binaries
  #         path: ./release-binaries/scaleway-ddns-*
  #     - name: Create draft release with binaries
  #       uses: d1ceward/draft-assets-release-action@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN
  #         files: |
  #           bin/scaleway-ddns-linux-amd64
  #           bin/scaleway-ddns-linux-arm64
  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          logout: true
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: d1ceward/scaleway-ddns
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: "test" #${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
